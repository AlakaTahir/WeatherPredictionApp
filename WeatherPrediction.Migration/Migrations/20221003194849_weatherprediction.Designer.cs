// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherPrediction.Migrations;

namespace WeatherPrediction.Migrations.Migrations
{
    [DbContext(typeof(WeatherInformationDataBaseContext))]
    [Migration("20221003194849_weatherprediction")]
    partial class weatherprediction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WeatherPrediction.Model.Entity.WeatherInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Cloud")
                        .HasColumnType("int");

                    b.Property<string>("DefaultTemperatureSymbol")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<double>("Dewpoint")
                        .HasColumnType("double");

                    b.Property<double>("DryBulb")
                        .HasColumnType("double");

                    b.Property<double>("MaximumTemperature")
                        .HasColumnType("double");

                    b.Property<double>("MinimumTemperature")
                        .HasColumnType("double");

                    b.Property<double>("Pressure")
                        .HasColumnType("double");

                    b.Property<double>("RelativeHumidity")
                        .HasColumnType("double");

                    b.Property<int>("Visiblity")
                        .HasColumnType("int");

                    b.Property<double>("Wetbulb")
                        .HasColumnType("double");

                    b.Property<double>("Wind")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("WeatherInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
